
project Telescope is

-- -gnatwalK -  w - Activate warnings (w)
--              a - activate all warnings  (a)
--              l - for missing elaboration pragmas too
--              K - but no warnings like '...is not modified, could be declared constant'
-- -gnatvoUN    v - verbose
--              o - Activate runtime overflow checks
--              U - Tag all error messages with the unique string "error:"
-- -gnat12      No warnings when Ada05 featues are used                 9.6-10368
-- -gnatwW - Do not warn if we assume a string to start at index 1

   for Languages use ("Ada");

   type Os_Architecture_Type is ("drw_x64", "lnx_arm"); --, "lnx_x64");
   Architecture : Os_Architecture_Type := external ("OS_ARCHITECTURE", "not_set");

   for Source_Dirs use ("src", "src/global", "src/global/" & Architecture);
   for Object_Dir use "obj";
   for Exec_Dir use "bin";
   for Main use ("telescope.adb",
                 "joystick_test.adb");   
   

   Platform_Independent_Compiler_Switches := ("-g",
                                              "-gnat12",
                                              "-fstack-check",
                                              "-gnata",
                                              "-gnatvoU",
                                              "-gnatwlaKW",
                                              "-gnatq",
                                              "-gnatQ");
   

   package Compiler is
      for Default_Switches ("Ada") use Platform_Independent_Compiler_Switches;
   end Compiler;
   
   package Binder is
     for Default_Switches ("Ada") use ("-E");
   end Binder;

   package Linker is
      case Architecture is
        when "drw_x64" => null;
        when "lnx_arm" => for Default_Switches ("Ada") use ("-L/usr/local/lib",  "-lwiringPi");
      end case;
   end Linker;


   package Builder is
      for Default_Switches ("Ada") use ("-k", "-s", "-j1"); -- use 1 cpu
   end Builder;

end Telescope;
